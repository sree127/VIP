//
//  GithubReposPresenter.swift
//  VIP
//
//  Created by Sreejith Njamelil on 14.11.18.
//  Copyright (c) 2018 Sreejith Njamelil. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import RxSwift
import RxCocoa

protocol GithubReposPresentationLogic
{
  func presentSomething(response: GithubRepos.FetchRepos.Response)
}

class GithubReposPresenter: GithubReposPresentationLogic
{
  weak var viewController: GithubReposDisplayLogic?
  
  // MARK: Do something
  
  func presentSomething(response: GithubRepos.FetchRepos.Response) {
    let some = response.result?.flatMap { value -> Observable<[GithubRepos.FetchRepos.ViewModel]> in
      var viewMod = [GithubRepos.FetchRepos.ViewModel]()
      viewMod.append(GithubRepos.FetchRepos.ViewModel(repoName: "sree127", repoURL: "sree127"))
      return Observable.from(optional: viewMod)
    }
    viewController?.displaySomething(viewModel: some!.asDriver(onErrorJustReturn: []))
  }
  
  
//  func parse(response: GithubRepos.FetchRepos.Response) -> Observable<[GithubRepos.FetchRepos.ViewModel]> {
//    return response.result.map(response.result)
//  }
//
//  func parseRepos(items: [[String: Any]]?) -> [GithubRepos.FetchRepos.ViewModel] {
//
//    guard let items = items else {
//      return []
//    }
//
//    var repositories = [GithubRepos.FetchRepos.ViewModel]()
//
//    items.forEach {
//      guard let repoName = $0["name"] as? String,
//        let repoURL = $0["html_url"] as? String else {
//          return
//      }
//      repositories.append(GithubRepos.FetchRepos.ViewModel(repoName: repoName, repoURL: repoURL))
//    }
//    return repositories
//  }
}
